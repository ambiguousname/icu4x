// generated by diplomat-tool
import type { CodePointSetBuilder } from "./CodePointSetBuilder"
import type { DataProvider } from "./DataProvider"
import type { Locale } from "./Locale"
import type { TitlecaseOptionsV1 } from "./TitlecaseOptionsV1"
import type { pointer, char } from "./diplomat-runtime.d.ts";


/** See the [Rust documentation for `CaseMapper`](https://docs.rs/icu/latest/icu/casemap/struct.CaseMapper.html) for more information.
*/
export class CaseMapper {
    

    get ffiValue(): pointer;


    static create(provider: DataProvider): CaseMapper;

    lowercase(s: string, locale: Locale): string;

    uppercase(s: string, locale: Locale): string;

    titlecaseSegmentWithOnlyCaseDataV1(s: string, locale: Locale, options: TitlecaseOptionsV1): string;

    fold(s: string): string;

    foldTurkic(s: string): string;

    addCaseClosureTo(c: char, builder: CodePointSetBuilder): void;

    simpleLowercase(ch: char): char;

    simpleUppercase(ch: char): char;

    simpleTitlecase(ch: char): char;

    simpleFold(ch: char): char;

    simpleFoldTurkic(ch: char): char;

    

}