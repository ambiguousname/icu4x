// generated by diplomat-tool
import type { DataProvider } from "./DataProvider"
import type { u8, i8, u16, i16, u32, i32, u64, i64, usize, isize, f32, f64, pointer, char } from "./diplomat-runtime.d.ts";


/** See the [Rust documentation for `ComposingNormalizer`](https://docs.rs/icu/latest/icu/normalizer/struct.ComposingNormalizer.html) for more information.
*/
export class ComposingNormalizer {
    

    get ffiValue(): pointer;


    static createNfc(provider: DataProvider): ComposingNormalizer;

    static createNfkc(provider: DataProvider): ComposingNormalizer;

    normalize(s: string): string;

    isNormalized(s: string): boolean;

    isNormalizedUtf16(s: string): boolean;

    isNormalizedUpTo(s: string): number;

    isNormalizedUtf16UpTo(s: string): number;

    

}