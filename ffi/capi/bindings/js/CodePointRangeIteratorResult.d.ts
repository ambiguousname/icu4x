// generated by diplomat-tool
import type { u8, i8, u16, i16, u32, i32, u64, i64, usize, isize, f32, f64, pointer, char } from "./diplomat-runtime.d.ts";


/** Result of a single iteration of [`CodePointRangeIterator`].
*Logically can be considered to be an `Option<RangeInclusive<u32>>`,
*
*`start` and `end` represent an inclusive range of code points [start, end],
*and `done` will be true if the iterator has already finished. The last contentful
*iteration will NOT produce a range done=true, in other words `start` and `end` are useful
*values if and only if `done=false`.
*/
export class CodePointRangeIteratorResult {
    #start;
    get start() : number;
    
    #end;
    get end() : number;
    
    #done;
    get done() : boolean;
    

    

}